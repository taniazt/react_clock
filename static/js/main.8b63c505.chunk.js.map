{"version":3,"sources":["Clock.js","App.js","index.js"],"names":["Clock","timer","state","date","Date","this","setInterval","setState","console","log","toLocaleTimeString","prevProps","props","name","clearInterval","React","Component","App","isClockVisible","clockName","showClock","hideClock","setRandomName","Math","floor","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAIaA,G,MAAb,4MACEC,MAAQ,KADV,EAGEC,MAAQ,CACNC,KAAM,IAAIC,MAJd,uDAOE,WAAqB,IAAD,OAClBC,KAAKJ,MAAQK,aAAY,WACvB,EAAKC,SAAS,CAAEJ,KAAM,IAAIC,OAE1BI,QAAQC,IAAI,EAAKP,MAAMC,KAAKO,wBAC3B,OAZP,gCAeE,SAAmBC,GACbN,KAAKO,MAAMC,OAASF,EAAUE,MAEhCL,QAAQC,IAAR,qCAA0CE,EAAUE,KAApD,eAA+DR,KAAKO,MAAMC,SAlBhF,kCAsBE,WACEC,cAAcT,KAAKJ,SAvBvB,oBA0BE,WACE,OACE,8BACGI,KAAKH,MAAMC,KAAKO,0BA7BzB,GAA2BK,IAAMC,YCgDlBC,E,4MA/Cbf,MAAQ,CACNgB,gBAAgB,EAChBC,UAAW,G,EAGbC,UAAY,WACV,EAAKb,SAAS,CAAEW,gBAAgB,K,EAGlCG,UAAY,WACV,EAAKd,SAAS,CAAEW,gBAAgB,K,EAGlCI,cAAgB,WACd,EAAKf,SAAS,CACZY,UAAWI,KAAKC,MAAuB,IAAhBD,KAAKE,SAAkB,M,4CAIlD,WAAU,IACAP,EAAmBb,KAAKH,MAAxBgB,eAER,OACE,yBAAKQ,UAAU,OACb,2CACA,2CAEG,IACAR,GAAkB,kBAAC,EAAD,CAAOL,KAAMR,KAAKH,MAAMiB,aAG7C,4BAAQQ,KAAK,SAASC,QAASvB,KAAKe,WAApC,cAIA,4BAAQO,KAAK,SAASC,QAASvB,KAAKgB,WAApC,cAIA,4BAAQM,KAAK,SAASC,QAASvB,KAAKiB,eAApC,wB,GAxCUP,IAAMC,WCAxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.8b63c505.chunk.js","sourcesContent":["import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  timer = null;\n\n  state = {\n    date: new Date(),\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(() => {\n      this.setState({ date: new Date() });\n      // eslint-disable-next-line\n      console.log(this.state.date.toLocaleTimeString());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.name !== prevProps.name) {\n      // eslint-disable-next-line\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`)\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    return (\n      <span>\n        {this.state.date.toLocaleTimeString()}\n      </span>\n    );\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: 0,\n  }\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  }\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  }\n\n  setRandomName = () => {\n    this.setState({\n      clockName: Math.floor((Math.random() * 100) + 1),\n    });\n  }\n\n  render() {\n    const { isClockVisible } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          Current time:\n          {' '}\n          {isClockVisible && <Clock name={this.state.clockName} />}\n        </p>\n\n        <button type=\"button\" onClick={this.showClock}>\n          Show Clock\n        </button>\n\n        <button type=\"button\" onClick={this.hideClock}>\n          Hide Clock\n        </button>\n\n        <button type=\"button\" onClick={this.setRandomName}>\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}